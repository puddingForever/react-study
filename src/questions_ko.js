export default [
  {
    id: "q1",
    text: "다음 중 React.js를 가장 잘 설명하는 정의는 무엇인가요?",
    answers: [
      "선언형 코드로 사용자 인터페이스를 구축하기 위한 라이브러리.",
      "웹 애플리케이션에서 상태 관리를 위한 라이브러리.",
      "명령형 코드로 사용자 인터페이스를 구축하기 위한 프레임워크.",
      "모바일 애플리케이션만을 위한 라이브러리.",
    ],
  },
  {
    id: "q2",
    text: "React 훅(Hooks)은 어떤 역할을 하나요?",
    answers: [
      "함수형 컴포넌트에서 상태 및 기타 React 기능을 사용할 수 있게 해줍니다.",
      "React 애플리케이션에서 반응형 레이아웃을 만드는 데 사용됩니다.",
      "애플리케이션 내의 오류를 처리합니다.",
      "전역 상태 관리를 위한 Redux 라이브러리의 일부입니다.",
    ],
  },
  {
    id: "q3",
    text: "JSX가 무엇인지 설명할 수 있나요?",
    answers: [
      "HTML과 유사한 문법을 JavaScript에 추가하는 JavaScript 확장 문법입니다.",
      "동적인 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다.",
      "React를 위해 특별히 만들어진 HTML 버전입니다.",
      "React 애플리케이션에서 HTTP 요청을 하기 위한 도구입니다.",
    ],
  },
  {
    id: "q4",
    text: "React에서 컴포넌트를 만드는 가장 일반적인 방법은 무엇인가요?",
    answers: [
      "렌더링 가능한 값을 반환하는 JavaScript 함수를 정의하는 것.",
      "JavaScript에서 커스텀 HTML 태그를 정의하는 것.",
      ".jsx 확장자를 가진 파일을 만드는 것.",
      `"new" 키워드 뒤에 컴포넌트 이름을 붙여 생성하는 것.`,
    ],
  },
  {
    id: "q5",
    text: 'React의 "state(상태)"라는 용어는 무엇을 의미하나요?',
    answers: [
      "컴포넌트 내의 값을 저장하고 해당 값이 변경되면 컴포넌트를 다시 렌더링하게 하는 객체.",
      "React 컴포넌트의 생명주기 단계.",
      "전체 애플리케이션의 상태로, 모든 props와 컴포넌트를 포함합니다.",
      "React 애플리케이션에서 전역 상태를 관리하기 위한 라이브러리.",
    ],
  },
  {
    id: "q6",
    text: "React 애플리케이션에서 리스트 데이터를 렌더링할 때 일반적으로 사용하는 방법은 무엇인가요?",
    answers: [
      "map() 메서드를 사용해 배열을 순회하고 JSX를 반환합니다.",
      "for() 루프를 사용해 배열을 순회하고 JSX를 반환합니다.",
      "forEach() 메서드를 사용해 배열을 순회하고 JSX를 반환합니다.",
      "loop() 메서드를 사용해 배열을 순회하고 JSX를 반환합니다.",
    ],
  },
  {
    id: "q7",
    text: "조건부 렌더링을 **할 수 없는** 방법은 무엇인가요?",
    answers: [
      "#if 템플릿 문법을 사용하는 것.",
      "삼항 연산자를 사용하는 것.",
      "&& 연산자를 사용하는 것.",
      "if-else 문을 사용하는 것.",
    ],
  },
];
